[Tests]
  issues = '#12903'
  design = 'source/bcs/ADPenaltyDirichletBC.md source/bcs/ADFunctionPenaltyDirichletBC.md'
  [./ad]
    requirement = 'The system shall support the application of Dirichlet type boundary conditions using the penalty method using the AD system'
    [./penalty_dirichlet_bc_test]
      type = 'Exodiff'
      input = 'penalty_dirichlet_bc_test.i'
      exodiff = 'penalty_dirichlet_bc_test_out.e'
      detail = 'with a constant value on the boundary.'
    [../]
    [./penalty_dirichlet_bc_test-jac]
      type = 'PetscJacobianTester'
      input = 'penalty_dirichlet_bc_test.i'
      prereq = 'ad/penalty_dirichlet_bc_test'
      run_sim = False
      difference_tol = 1e-7
      detail = 'with a constant value on the boundary and shall be able to produce the exact Jacobian.'
    [../]

    [./function_penalty_dirichlet_bc_test]
      type = 'Exodiff'
      input = 'function_penalty_dirichlet_bc_test.i'
      exodiff = 'function_penalty_dirichlet_bc_test_out.e'
      abs_zero = 1e-05
      max_parallel = 11
      scale_refine = 3
      detail = 'with a value on the boundary set by a function.'
    [../]
    [./function_penalty_dirichlet_bc_test-jac]
      type = 'PetscJacobianTester'
      input = 'function_penalty_dirichlet_bc_test.i'
      prereq = 'ad/function_penalty_dirichlet_bc_test'
      run_sim = False
      ratio_tol = 1e-7
      difference_tol = 0.1
      detail = 'with a value on the boundary set by a function and shall be able to produce the exact Jacobian.'
    [../]
  [../]
[]

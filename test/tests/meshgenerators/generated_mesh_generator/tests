[Tests]
  [test]
    type = 'Exodiff'
    input = 'generated_mesh_generator.i'
    cli_args = '--mesh-only'
    exodiff = 'generated_mesh_generator_in.e'
    exodiff_opts = '-pedantic'
    requirement = 'The system shall be able to use libmesh mesh generation tools.'
    design = 'meshgenerators/GeneratedMeshGenerator.md'
    issues = '#11640'
    recover = false
  []

  [offset]
    type = 'Exodiff'
    input = 'offset.i'
    cli_args = '--mesh-only'
    exodiff = 'offset_in.e'
    exodiff_opts = '-pedantic'
    requirement = 'The system shall be able to use libmesh mesh generation tools and shift node/sideset '
                  'ids by a constant offset.'
    design = 'meshgenerators/GeneratedMeshGenerator.md'
    issues = '#11640'
    recover = false
  []

  [prefix]
    issues = '#11640'
    design = 'meshgenerators/GeneratedMeshGenerator.md'
    requirement = 'The system shall include mesh generation tools and allow adding a name prefix to '
                  'the node/sideset names and maintain the'

    [id]
      type = 'Exodiff'
      input = 'prefix.i'
      cli_args = '--mesh-only'
      exodiff = 'prefix_in.e'
      exodiff_opts = '-pedantic'
      recover = false

      detail = "id and"
    []
    [name]
      prereq = prefix/id
      type = 'Exodiff'
      input = 'prefix.i'
      cli_args = '--mesh-only'
      exodiff = 'prefix_in.e'
      exodiff_opts = '-pedantic -match_by_name'
      recover = false

      detail = "include the added name."
    []
  []

  [both]
    issues = '#11640'
    design = 'meshgenerators/GeneratedMeshGenerator.md'
    requirement = 'The system shall include mesh generation tools and shift node/sideset ids by a '
                  'constant offset while also adding a name prefix to them and maintain the'

    [id]
      type = 'Exodiff'
      input = 'both.i'
      cli_args = '--mesh-only'
      exodiff = 'both_in.e'
      exodiff_opts = '-pedantic'
      recover = false

      detail = "the shifted id and"

    []
    [name]
      prereq = both/id
      type = 'Exodiff'
      input = 'both.i'
      cli_args = '--mesh-only'
      exodiff = 'both_in.e'
      exodiff_opts = '-pedantic -match_by_name'
      recover = false

      detail = "include the added name."

    []
  []
  [type_test]
    prereq = test
    type = 'RunException'
    input = 'generated_mesh_generator.i'
    cli_args = '--mesh-only Mesh/type=GeneratedMesh'
    expect_err = 'Mesh Generators present but the \[Mesh\] block is set to construct a '
                 '"GeneratedMesh" mesh, which does not use Mesh Generators in constructing the mesh.'
    requirement = 'The system shall generate a warning if Mesh Generators are used with a mesh type that '
                  'does not accept them'
    design = 'meshgenerators/GeneratedMeshGenerator.md'
    issues = '#13959'
  []

  [with_subdomain_ids_test]
    type = 'Exodiff'
    input = 'gmg_with_subdomain.i'
    cli_args = '--mesh-only'
    exodiff = 'gmg_with_subdomain_in.e'
    exodiff_opts = '-pedantic'
    requirement = 'The system shall be able to assign subdomain IDs for the (cartesian) generated mesh generator.'
    design = 'meshgenerators/GeneratedMeshGenerator.md'
    issues = '#19297'
    recover = false
  []
[]

[Tests]
  design = 'VectorPostprocessorComparison.md'
  issues = '#11704'

  [group]
    requirement = "Vector post-processor values shall be able to be compared and return a boolean "
                  "value for"

    [greater_than_equals]
      type = 'CSVDiff'
      input = 'vector_postprocessor_comparison.i'
      csvdiff = 'greater_than_equals.csv'

      detail = "greater than or equal,"
    []
    [greater_than]
      type = 'CSVDiff'
      input = 'vector_postprocessor_comparison.i'
      cli_args = 'Postprocessors/vpp_comparison/comparison_type=greater_than '
                 'Outputs/file_base=greater_than'
      csvdiff = 'greater_than.csv'

      detail = "greater than,"
    []
    [less_than_equals]
      type = 'CSVDiff'
      input = 'vector_postprocessor_comparison.i'
      cli_args = 'Functions/a_fn/value=0 '
                 'Postprocessors/vpp_comparison/comparison_type=less_than_equals '
                 'Outputs/file_base=less_than_equals'
      csvdiff = 'less_than_equals.csv'

      detail = "less than, or"
    []
    [equals]
      type = 'CSVDiff'
      input = 'vector_postprocessor_comparison.i'
      cli_args = 'Functions/b_fn/type=ConstantFunction Functions/b_fn/value=2 '
                 'Postprocessors/vpp_comparison/comparison_type=equals Outputs/file_base=equals'
      csvdiff = 'equals.csv'
      # ParsedFunction uses expression, ConstantFunction value
      allow_unused = true

      detail = "equal."
    []
  []
[]

# These tests originally came from explicit-euler
# (the capability @andrsd created that did the best it could while
# still working with the NonlinearSystem)
# Those tests have been modified to use the new ActuallyExplicitEuler
# TimeIntegrator... but the gold files are still the originals to prove
# that the new capability works

[Tests]
  design = '/ActuallyExplicitEuler.md'
  issues = '#10837'

  [group]
    requirement = "The system shall correctly solve a time dependent Laplace equation using an explicit first-order, forward Euler scheme with:"

    [1d-linear]
      type = 'Exodiff'
      input = 'ee-1d-linear.i'
      exodiff = 'ee-1d-linear_out.e'

      detail = "for a 1D problem using linear Lagrange elements and Dirichlet boundary conditions;"
    []

    [1d-quadratic]
      type = 'Exodiff'
      input = 'ee-1d-quadratic.i'
      exodiff = 'ee-1d-quadratic_out.e'

      detail = "for a 1D problem using second-order Lagrange elements and Dirichlet boundary conditions;"
    []

    [1d-quadratic-neumann]
      type = 'Exodiff'
      input = 'ee-1d-quadratic-neumann.i'
      exodiff = 'ee-1d-quadratic-neumann_out.e'

      detail = "for a 1D problem using second-order Lagrange elements and Neumann boundary conditions;"
    []

    [2d-linear]
      type = 'Exodiff'
      input = 'ee-2d-linear.i'
      exodiff = 'ee-2d-linear_out.e'

      detail = "for a 2D problem using linear Lagrange elements and Dirichlet boundary conditions;"
    []

    [2d-linear-adapt]
      type = 'Exodiff'
      input = 'ee-2d-linear-adapt.i'
      exodiff = 'ee-2d-linear-adapt_out.e ee-2d-linear-adapt_out.e-s003'
      abs_zero = 1e-8

      detail = "for a 2D problem using linear Lagrange elements, Dirichlet boundary conditions, and mesh adaptivity;"
    []

    [2d-quadratic]
      type = 'Exodiff'
      input = 'ee-2d-quadratic.i'
      exodiff = 'ee-2d-quadratic_out.e'

      detail = "for a 2D problem using second-order Lagrange elements and Dirichlet boundary conditions;"
    []
  []

  [ode]
    type = 'CSVDiff'
    input = 'ee-ode.i'
    csvdiff = 'ee-ode_out.csv'
    requirement = "The system shall correctly solve a time dependent ordinary differential equation using an explicit first-order, forward Euler scheme."
  []
[]

# Copying tests with the binary is intended to copy from an installed location
# (i.e. after "make install"). The logic in the binary however attempts to find
# installed tests relative to the binary location, which is also installed
# through "make install". If we run it from the non-installed version of the binary
# it'll look for tests in <bin location>/../share/moose_test/tests/. To get
# line coverage, we'll just copy a file to that area.
# See application_development/build_system.md for more information.

[Tests]
  issues = '#19022'
  design = 'MooseApp.md'

  [show_copyable_inputs]
    type = 'RunApp'
    cli_args = "--show-copyable-inputs"
    no_additional_cli_args = True
    expect_out = 'The following directories are installable.*tests'
    # no_additional_cli_args strips all other options, including valgrind...
    # so we can't actually test this with valgrind
    valgrind = none

    requirement = 'The system shall support the ability to report installable inputs on the command line.'
  []

  [test_copy_install]
    requirement = 'The system shall support the ability to "install" inputs:'
    [setup_fake_test_structure]
      type = 'RunCommand'
      command = 'rm -rf ../../../make_install_test;
                 rm -rf ../../../share/moose_test;
                 mkdir -p ../../../share/moose_test/tests/version;
                 cp ../misc/version/tests ../../../share/moose_test/tests/version;
                 cp ../../testroot ../../../share/moose_test/tests/;
                 mkdir -p ../../../make_install_test'
      installation_type = IN_TREE

      detail = 'from a pre-determined user-readable location;'
    []

    [copy_tests]
      type = 'RunApp'
      cli_args = "--copy-inputs tests"
      working_directory = '../../../make_install_test'
      no_additional_cli_args = True
      expect_out = 'Directory successfully copied'
      installation_type = IN_TREE
      prereq = 'test_copy_install/setup_fake_test_structure'

      detail = 'copied using a MOOSE-based binary;'
    []

    [check_files]
      type = 'CheckFiles'
      working_directory = '../../../make_install_test'
      input = 'DUMMY'
      should_execute = False
      check_files = 'moose_test/tests/testroot moose_test/tests/version/tests'
      installation_type = IN_TREE
      prereq = 'test_copy_install/copy_tests'

      detail = 'verifying a successful copy operation;'
    []

    [copy_warn_overwrite]
      type = 'RunException'
      working_directory = '../../../make_install_test'
      cli_args = "--copy-inputs tests"
      no_additional_cli_args = True
      expect_err = 'The directory \S+ already exists.'
      installation_type = IN_TREE
      prereq = 'test_copy_install/check_files'

      detail = 'able to report an error if overwriting may occur using a MOOSE-based binary;'
    []

    [link_exec_installed]
      type = 'RunCommand'
      command = 'for bin in `ls ../../../test/moose_test-*`
                 do
                 ln -sf $bin .
                 done'
      working_directory = '../../../make_install_test/moose_test/tests'
      installation_type = IN_TREE
      prereq = 'test_copy_install/copy_warn_overwrite'

      detail = 'able to link a binary to an installed location;'
    []

    [run]
      type = 'RunApp'
      cli_args = "--run"
      working_directory = "../../../make_install_test/moose_test/tests"
      no_additional_cli_args = True
      installation_type = IN_TREE
      prereq = 'test_copy_install/link_exec_installed'

      detail = 'able to successfully launch the TestHarness using a MOOSE-based binary;'
    []

    [tear_down]
      type = 'RunCommand'
      command = 'rm -rf ../../../share/;
                 rm -rf ../../../make_install_test'
      prereq = 'test_copy_install/run'
      installation_type = IN_TREE

      detail = 'and cleaned up from a user-readable location.'
    []
  []
[]

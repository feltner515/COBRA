[Tests]
  issues = '#17087'
  [run_except1]
    type = RunException
    input = test.i
    expect_err = "variable1 does not exist on all the blocks specified by the subdomain1 parameter"
    cli_args = "FVInterfaceKernels/active='bad1'"
    design = 'FVInterfaceKernels/index.md'
    requirement = 'The system shall error if a user specified variable on the 1st side of an interface does not actually exist on the 1st side.'
  []
  [run_except2]
    type = RunException
    input = test.i
    expect_err = "variable2 does not exist on all the blocks specified by the subdomain2 parameter"
    cli_args = "FVInterfaceKernels/active='bad2'"
    design = 'FVInterfaceKernels/index.md'
    requirement = 'The system shall error if a user specified variable on the 2nd side of an interface does not actually exist on the 2nd side.'
  []
  [run_except3]
    type = RunException
    input = test.i
    expect_err = "variable1 does not exist on all the blocks specified by the subdomain2 "
                 "parameter\.\s*Note that you did not provide the variable2 parameter, so variable1 "
                 "was implicitly used on subdomain2"
    cli_args = "FVInterfaceKernels/active='bad3'"
    design = 'FVInterfaceKernels/index.md'
    requirement = 'The system shall error if a user does not specify a variable on the 2nd side of an interface, leading the system to assume that the variable on the 1st side of the interface should be used on the 2nd side, and the variable on the 1st side does not exist on the 2nd side.'
  []
  [first_order_convergence]
    requirement = 'The system shall be able to solve a diffusion problem with finite volumes with the domain split in half and show first order convergence due to its treatment of coefficient discontinuities both'
    design = 'FVOneVarDiffusionInterface.md'
    [with-ik]
      type = PythonUnitTest
      input = test.py
      test_case = TestFVOneVarDiffusionInterface
      detail = 'with an interfacing object'
      required_python_packages = 'pandas matplotlib'
    []
    [without-ik]
      type = PythonUnitTest
      input = test.py
      test_case = TestFVNoInterface
      detail = 'without an interfacing object'
      required_python_packages = 'pandas matplotlib'
    []
  []
  [harmonic]
    requirement = "The system shall be able to solve a diffusion problem with finite volumes with "
                  "the domain split in half and show second order convergence due to the harmonic "
                  "interpolation of the diffusion coeffcient"
    design = 'FVOneVarDiffusionInterface.md'
    type = PythonUnitTest
    input = test.py
    test_case = TestFVOneVarDiffusionInterfaceHarmonic
    required_python_packages = 'pandas matplotlib'
  []
  [resid_and_jac]
    requirement = 'The system shall be able to compute the residual and Jacobian together for a finite volume interface kernel.'
    design = 'FVOneVarDiffusionInterface.md'
    issues = '#19444'
    input = test.i
    exodiff = test_out.e
    type = Exodiff
  []
[]

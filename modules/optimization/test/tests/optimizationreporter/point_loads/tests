[Tests]
  issues = '#21885'
  design = 'ReporterPointSource.md'
  [point_loads]
    requirement = "The system shall be able to invert for point loads using"
    [hessian]
      # DO NOT CHANGE THIS TEST
      # this test is documented as an example in forceInv_pointLoads.md
      # if this test is changed, the figures will need to be updated.
      type = CSVDiff
      input = main.i
      csvdiff = main_out_OptimizationReporter_0001.csv
      max_threads = 1 # Optimize executioner does not support multiple threads
      rel_err = 0.1
      abs_zero = 10
      # steady solve
      recover = false
      detail = 'Hessian-based optimization,'
    []
    [adjoint]
      type = CSVDiff
      input = main.i
      cli_args = "Executioner/tao_solver=taolmvm "
                 "Executioner/petsc_options_iname='-tao_gttol' "
                 "Executioner/petsc_options_value='1e-5'"
      csvdiff = main_out_OptimizationReporter_0001.csv
      max_threads = 1 # Optimize executioner does not support multiple threads
      rel_err = 0.1
      abs_zero = 10
      # steady solve
      recover = false
      detail = "gradient-based optimization, or"
    []
    [auto_adjoint]
      type = CSVDiff
      input = main_auto_adjoint.i
      cli_args = 'Outputs/file_base=main_out'
      csvdiff = main_out_OptimizationReporter_0001.csv
      max_threads = 1 # Optimize executioner does not support multiple threads
      rel_err = 0.1
      abs_zero = 10
      # steady solve
      recover = false
      detail = 'gradient-based optimization with an automatically computed adjoint.'
    []
  []
[]

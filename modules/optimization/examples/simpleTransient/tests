[Tests]
  [transient]
    design = "ElementOptimizationSourceFunctionInnerProduct.md NearestReporterCoordinatesFunction.md  ReporterTimePointSource.md"
    issues = '#21885'
    requirement = "The system shall be able to perform force-inversion optimization with time-dependent parameters and outputs with"
    [objective]
      type = CSVDiff
      input = main.i
      cli_args = "-tao_gatol 90 forward:Outputs/file_base=gradFree
                  OptimizationReporter/initial_condition='0.017248124297389537 -0.4383269038787613 -1.0120688493193575 -0.604005388481836 -1.4561640635027022 3.231744273062789 0.30497109596745786 0.44633697183648136 0.01016924485170484 2.102321678477381 -0.6633902660583816 0.8744951418636224 -1.6563188219465808 -0.7960335532123246 -0.8868197436891168 3.4789948727882036 1.221786635733348 -1.3649297188353513 0.6718141978617336 1.073784058368632 -0.20990475499085504 -0.23140796936323005 2.719922596118634 0.49032306047413676 0.5754881340320752 -1.4387408219638242 0.5868285452264156 -0.26563061173982583 0.7632228812045031 0.5847693390767825 1.2297597229219401 0.018872725738175458 1.3701093737026238 0.5124595468128872 0.388110595828123 0.11247112873355217 0.9234434408370418 0.3748330890983532 -0.1772288909293001 -0.9744206675334496 -0.3917172574619362 -0.2538603477404897 0.5517774216239373 0.07213835476751881'"
      csvdiff = gradFree.csv
      rel_err = 1e-4
      heavy = true
      method = OPT
      detail = 'only a forward solve,'
    []
    [gradient]
      type = CSVDiff
      input = main_gradient.i
      cli_args = 'forward:Outputs/file_base=grad'
      csvdiff = grad.csv
      rel_err = 1e-4
      heavy = true
      method = OPT
      detail = 'an adjoint solve,'
    []
    [auto_adjoint]
      type = CSVDiff
      input = main_auto_adjoint.i
      cli_args = 'forward:Outputs/file_base=grad'
      csvdiff = grad.csv
      rel_err = 1e-4
      heavy = true
      method = OPT
      detail = 'an automatically computed adjoint solve, and '
    []
    [nonlinear]
      type = CSVDiff
      input = main_auto_adjoint.i
      cli_args = 'MultiApps/forward/input_files=nonlinear_forward_and_adjoint.i Outputs/file_base=nonlinear_auto_adjoint'
      csvdiff = nonlinear_auto_adjoint_forward0.csv
      rel_err = 1e-4
      heavy = true
      method = OPT
      detail = 'nonlinear material properties.'
    []
  []

  [transient_mesh]
    design = "ParameterMeshOptimization.md ElementOptimizationSourceFunctionInnerProduct.md ParameterMeshFunction.md  ReporterTimePointSource.md"
    issues = '#22995'
    requirement = 'The sytem shall be able to perform force-inversion optimization with time-dependent parameter and outputs with spatial linear interpolation by '
    [source_mesh]
      type = CheckFiles
      input = source_mesh.i
      cli_args = '--mesh-only'
      check_files = 'source_mesh_in.e'
      heavy = true
      method = OPT
      detail = 'creating a source mesh and '
    []
    [optimization]
      type = Exodiff
      input = main_mesh.i
      exodiff = main_mesh_out_forward0.e
      prereq = transient_mesh/source_mesh
      rel_err = 1e-4
      heavy = true
      method = OPT
      detail = 'performing the optimization.'
    []
  []
[]

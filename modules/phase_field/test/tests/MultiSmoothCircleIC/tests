[Tests]
  issues = ''
  [./multi_test]
    type = 'Exodiff'
    input = 'multismoothcircleIC_test.i'
    exodiff = 'multismoothcircleIC_test_out.e'
    scale_refine = 1
    valgrind = 'HEAVY'
    rel_err = 4e-5
    design = 'MultiSmoothCircleIC.md'
    requirement = 'We shall be able to generate multiple smooth circle initial conditions with uniform radius variation type'
  [../]

  [./multi_normal_test]
    type = 'Exodiff'
    input = 'multismoothcircleIC_normal_test.i'
    exodiff = 'multismoothcircleIC_normal_test_out.e'
    scale_refine = 1
    valgrind = 'HEAVY'
    method = '!DBG' # Uses nodal feature flood count - probably should be revamped
    max_parallel = 1 # See #9886
    rel_err = 2e-5
    design = 'MultiSmoothCircleIC.md'
    requirement = 'We shall be able to generate multiple smooth circle initial conditions with normal radius variation type'
  [../]

  [./lattice_bounds]
    type = 'Exodiff'
    input = 'latticesmoothcircleIC_bounds.i'
    exodiff = 'latticesmoothcircleIC_bounds_out.e'
    valgrind = 'HEAVY'
    design = 'LatticeSmoothCircleIC.md'
    requirement = 'We shall be able to produce a lattice of smooth circle initial conditions, allowing the circles to exist on the simulation cell boundaries and using a uniform radius variation type'
  [../]

  [./lattice_test]
    type = 'Exodiff'
    input = 'latticesmoothcircleIC_test.i'
    exodiff = 'latticesmoothcircleIC_test_out.e'
    scale_refine = 1
    valgrind = 'HEAVY'
    max_parallel = 1 # See #9886
    design = 'LatticeSmoothCircleIC.md'
    requirement = 'We shall be able to produce a lattice of smooth circle initial conditions, using a uniform radius variation type'
  [../]

  [./lattice_normal_test]
    type = 'Exodiff'
    input = 'latticesmoothcircleIC_normal_test.i'
    exodiff = 'latticesmoothcircleIC_normal_test_out.e'
    scale_refine = 1
    valgrind = 'HEAVY'
    max_parallel = 1 # See #9886
    design = 'LatticeSmoothCircleIC.md'
    requirement = 'We shall be able to produce a lattice of smooth circle initial conditions using a normal radius variation type'
  [../]

  [./lattice_small_invalue_test]
    type = 'Exodiff'
    input = 'latticesmoothcircleIC_small_invalue_test.i'
    exodiff = 'latticesmoothcircleIC_small_invalue_test_out.e'
    scale_refine = 1
    valgrind = 'HEAVY'
    design = 'LatticeSmoothCircleIC.md'
    requirement = 'We shall be able to create multiple SpecifiedSmoothCircleICs with a small invalue'
  [../]

  [./specified_test]
    type = 'Exodiff'
    input = 'specifiedsmoothcircleIC_test.i'
    exodiff = 'specifiedsmoothcircleIC_test_out.e'
    scale_refine = 1
    valgrind = 'HEAVY'
    design = 'SpecifiedSmoothCircleIC.md'
    requirement = 'We shall be able to create several SpecifiedSmoothCircleICs with a standard invalue'
  [../]
[]

[Tests]
  [./radiative_bc_cyl]
    type = CSVDiff
    input = 'radiative_bc_cyl.i'
    csvdiff = 'radiative_bc_cyl_out.csv'
    requirement = "The system shall be able to model radiative transfer from a cylindrical surface as a boundary condition."
    design = 'source/bcs/InfiniteCylinderRadiativeBC.md'
    issues = "#13053"
    # see #21185
    allow_warnings = true
  [../]
  [ad_radiative_bc_cyl]
    type = CSVDiff
    input = 'ad_radiative_bc_cyl.i'
    csvdiff = 'radiative_bc_cyl_out.csv'
    requirement = "The system shall be able to model radiative transfer from a cylindrical surface as boundary condition with automated differentiation."
    design = 'source/bcs/ADInfiniteCylinderRadiativeBC.md'
    issues = "#13053"
    cli_args = "Outputs/file_base=radiative_bc_cyl_out"
    # see #21185
    allow_warnings = true
  []
  [ad_radiative_bc_cyl_jacobian]
    type = PetscJacobianTester
    input = 'ad_radiative_bc_cyl.i'
    ratio_tol = 1e-7
    difference_tol = 2
    requirement = "The system shall be able to model radiative transfer from a cylindrical surface as boundary condition with automated differentiation and provide exact Jacobian."
    design = 'source/bcs/ADInfiniteCylinderRadiativeBC.md'
    issues = "#13053"
    # see #21185
    allow_warnings = true
  []
  [./function_radiative_bc]
    type = Exodiff
    input = 'function_radiative_bc.i'
    exodiff = 'function_radiative_bc_out.e'
    requirement = "The system shall be able to model radiative heat transfer using a user-specified emissivity function."
    design = 'source/bcs/FunctionRadiativeBC.md'
    issues = "#13053"
    mesh_mode = REPLICATED
  [../]
  [ad_function_radiative_bc]
    type = Exodiff
    input = 'ad_function_radiative_bc.i'
    exodiff = 'function_radiative_bc_out.e'
    requirement = "The system shall be able to model radiative heat transfer using a user-specified emissivity function with automated differentiation."
    design = 'source/bcs/ADFunctionRadiativeBC.md'
    issues = "#13053"
    mesh_mode = REPLICATED
    cli_args = "Outputs/file_base=function_radiative_bc_out"
  []
  [ad_function_radiative_bc_jacobian]
    type = PetscJacobianTester
    input = 'ad_function_radiative_bc.i'
    ratio_tol = 1e-7
    difference_tol = 5e-5
    cli_args = "Executioner/num_steps=1"
    requirement = "The system shall be able to model radiative heat transfer using a user-specified emissivity function with automated differentiation and provide exact Jacobian."
    design = 'source/bcs/ADFunctionRadiativeBC.md'
    issues = "#13053"
    mesh_mode = REPLICATED
  []
[]

[Tests]
  design = 'navier_stokes/index.md'
  [./RZ_cone_no_parts]
    type = 'Exodiff'
    input = 'RZ_cone_no_parts.i'
    exodiff = 'RZ_cone_no_parts_out.e'
    issues = '#7651'
    requirement = 'The system shall be able to solve the incompressible Navier-Stokes equations in an RZ coordinate system while not integrating the pressure term by parts.'
  [../]
  [./RZ_cone_by_parts]
    type = 'Exodiff'
    input = 'RZ_cone_by_parts.i'
    exodiff = 'RZ_cone_by_parts_out.e'
    issues = '#7651'
    requirement = 'The system shall be able to solve the incompressible Navier-Stokes equations in an RZ coordinate system while integrating the pressure term by parts.'
  [../]
  [./high_re]
    type = 'Exodiff'
    input = 'RZ_cone_high_reynolds.i'
    exodiff = 'steady_linear.e'
    cli_args = 'Outputs/out/file_base=steady_linear'
    issues = '#7651'
    requirement = 'The system shall be able to solve the incompressible Navier-Stokes equations for a high Reynolds number in an RZ coordinate system.'
  [../]
  [./jac]
    type = 'PetscJacobianTester'
    input = 'RZ_cone_stab_jac_test.i'
    ratio_tol = 1e-7
    difference_tol = 1e-5
    issues = '#7651'
    requirement = 'The system shall be able to compute an accurate Jacobian for the incompressible Navier-Stokes equations in an RZ coordinate system.'
  [../]
  [ad_rz_cone_by_parts]
    type = 'Exodiff'
    input = 'ad_rz_cone_by_parts.i'
    exodiff = 'ad_rz_cone_by_parts_out.e'
    requirement = 'The system shall be able to solve the transient incompressible Navier-Stokes equations using an automatic differentiation, vector variable implementation in an RZ coordinate system while integrating the pressure term by parts and reproduce the results of a hand-coded Jacobian implementation.'
    issues = '#14901'
    custom_cmp = 'rz-cone.cmp' # To ignore the vector variable components automatically generated by libMesh/ParaView
  []
  [ad_rz_cone_no_parts]
    type = 'Exodiff'
    input = 'ad_rz_cone_no_parts.i'
    exodiff = 'ad_rz_cone_no_parts_out.e'
    requirement = 'The system shall be able to solve the transient incompressible Navier-Stokes equations using an automatic differentiation, vector variable implementation in an RZ coordinate system while not integrating the pressure term by parts, using a traction form for the viscous term, and using a no-bc boundary condition, and reproduce the results of a hand-coded Jacobian implementation.'
    issues = '#14901'
    custom_cmp = 'rz-cone.cmp' # To ignore the vector variable components automatically generated by libMesh/ParaView
  []
  [ad_rz_cone_no_parts_steady]
    type = 'Exodiff'
    input = 'ad_rz_cone_no_parts_steady.i'
    exodiff = 'ad_rz_cone_no_parts_steady_out.e'
    requirement = 'The system shall be able to solve the steady incompressible Navier-Stokes equations using an automatic differentiation, vector variable implementation in an RZ coordinate system while not integrating the pressure term by parts and applying a natural outflow boundary condition.'
    issues = '#14901'
  []
  [ad_rz_cone_by_parts_steady]
    type = 'Exodiff'
    input = 'ad_rz_cone_by_parts_steady.i'
    exodiff = 'ad_rz_cone_by_parts_steady_out.e'
    requirement = 'The system shall be able to solve the steady incompressible Navier-Stokes equations using an automatic differentiation, vector variable implementation in an RZ coordinate system while integrating the pressure term by parts and applying a natural outflow boundary condition'
    issues = '#14901'
  []
  [ad_rz_cone_no_parts_steady_nobcbc]
    type = 'Exodiff'
    input = 'ad_rz_cone_no_parts_steady_nobcbc.i'
    exodiff = 'ad_rz_cone_no_parts_steady_nobcbc_out.e'
    requirement = 'The system shall be able to solve the steady incompressible Navier-Stokes equations using an automatic differentiation, vector variable implementation in an RZ coordinate system while not integrating the pressure term by parts and applying a NoBC outflow boundary condition.'
    issues = '#14901'
  []
  [ad_rz_cone_by_parts_steady_nobcbc]
    type = 'Exodiff'
    input = 'ad_rz_cone_by_parts_steady_nobcbc.i'
    exodiff = 'ad_rz_cone_by_parts_steady_nobcbc_out.e'
    requirement = 'The system shall be able to solve the steady incompressible Navier-Stokes equations using an automatic differentiation, vector variable implementation in an RZ coordinate system while integrating the pressure term by parts and applying a NoBC outflow boundary condition'
    issues = '#14901'
  []
  [rz_cone_no_parts_steady]
    type = 'Exodiff'
    input = 'rz_cone_no_parts_steady.i'
    exodiff = 'rz_cone_no_parts_steady_out.e'
    requirement = 'The system shall be able to solve the steady incompressible Navier-Stokes equations using a hand-coded Jacobian, standard variable implementation in an RZ coordinate system while not integrating the pressure term by parts and applying a natural outflow boundary condition and reproduce the results of the AD, vector variable implementation.'
    issues = '#14901'
    custom_cmp = 'rz-cone-with-globals.cmp' # To ignore the vector variable components automatically generated by libMesh/ParaView
  []
  [rz_cone_by_parts_steady]
    type = 'Exodiff'
    input = 'rz_cone_by_parts_steady.i'
    exodiff = 'rz_cone_by_parts_steady_out.e'
    requirement = 'The system shall be able to solve the steady incompressible Navier-Stokes equations using a hand-coded Jacobian, standard variable implementation in an RZ coordinate system while integrating the pressure term by parts and applying a natural outflow boundary condition and reproduce the results of the AD, vector variable implementation.'
    issues = '#14901'
    custom_cmp = 'rz-cone-with-globals.cmp' # To ignore the vector variable components automatically generated by libMesh/ParaView
  []
  [rz_cone_no_parts_steady_nobcbc]
    type = 'Exodiff'
    input = 'rz_cone_no_parts_steady_nobcbc.i'
    exodiff = 'rz_cone_no_parts_steady_nobcbc_out.e'
    requirement = 'The system shall be able to solve the steady incompressible Navier-Stokes equations using a hand-coded Jacobian, standard variable implementation in an RZ coordinate system while not integrating the pressure term by parts and applying a NoBC outflow boundary condition and reproduce the results of the AD, vector variable implementation.'
    issues = '#14901'
    custom_cmp = 'rz-cone-with-globals.cmp' # To ignore the vector variable components automatically generated by libMesh/ParaView
  []
  [rz_cone_by_parts_steady_nobcbc]
    type = 'Exodiff'
    input = 'rz_cone_by_parts_steady_nobcbc.i'
    exodiff = 'rz_cone_by_parts_steady_nobcbc_out.e'
    requirement = 'The system shall be able to solve the steady incompressible Navier-Stokes equations using a hand-coded Jacobian, standard variable implementation in an RZ coordinate system while integrating the pressure term by parts and applying a NoBC outflow boundary condition and reproduce the results of the AD, vector variable implementation.'
    issues = '#14901'
    custom_cmp = 'rz-cone-with-globals.cmp' # To ignore the vector variable components automatically generated by libMesh/ParaView
  []
  [ad_rz_cone_no_parts_steady_supg_pspg]
    type = 'Exodiff'
    input = 'ad_rz_cone_no_parts_steady_stabilized.i'
    exodiff = 'ad_rz_cone_no_parts_steady_stabilized_out.e'
    issues = '#14901'
    requirement = 'The system shall be able to solve the steady incompressible Navier-Stokes equations with SUPG and PSPG stabilization and a first order velocity basis using an automatic differentiation, vector variable implementation in an RZ coordinate system while not integrating the pressure term by parts and applying a natural outflow boundary condition.'
  []
  [rz_cone_no_parts_steady_supg_pspg]
    type = 'Exodiff'
    input = 'rz_cone_no_parts_steady_stabilized.i'
    exodiff = 'rz_cone_no_parts_steady_stabilized_out.e'
    issues = '#14901'
    requirement = 'The system shall be able to solve the steady incompressible Navier-Stokes equations with SUPG and PSPG stabilization and a first order velocity basis using a hand-coded Jacobian, standard variable implementation in an RZ coordinate system while not integrating the pressure term by parts and applying a natural outflow boundary condition and reproduce the results of the AD, vector variable implementation.'
    custom_cmp = 'rz-cone-with-globals.cmp' # To ignore the vector variable components automatically generated by libMesh/ParaView
  []
  [ad_rz_cone_by_parts_steady_supg_pspg]
    type = 'Exodiff'
    input = 'ad_rz_cone_by_parts_steady_stabilized.i'
    exodiff = 'ad_rz_cone_by_parts_steady_stabilized_out.e'
    issues = '#14901'
    requirement = 'The system shall be able to solve the steady incompressible Navier-Stokes equations with SUPG and PSPG stabilization and a first order velocity basis using an automatic differentiation, vector variable implementation in an RZ coordinate system while integrating the pressure term by parts and applying a natural outflow boundary condition.'
  []
  [rz_cone_by_parts_steady_supg_pspg]
    type = 'Exodiff'
    input = 'rz_cone_by_parts_steady_stabilized.i'
    exodiff = 'rz_cone_by_parts_steady_stabilized_out.e'
    issues = '#14901'
    requirement = 'The system shall be able to solve the steady incompressible Navier-Stokes equations with SUPG and PSPG stabilization and a first order velocity basis using a hand-coded Jacobian, standard variable implementation in an RZ coordinate system while integrating the pressure term by parts and applying a natural outflow boundary condition and reproduce the results of the AD, vector variable implementation.'
    custom_cmp = 'rz-cone-with-globals.cmp' # To ignore the vector variable components automatically generated by libMesh/ParaView
  []
  [ad_rz_cone_no_parts_steady_supg_pspg_second_order]
    # TODO: update the gold file once second order derivatives are implemented in libMesh for TypeNTensors
    type = 'Exodiff'
    input = 'ad_rz_cone_no_parts_steady_stabilized_second_order.i'
    exodiff = 'ad_rz_cone_no_parts_steady_stabilized_second_order_out.e'
    issues = '#14901'
    requirement = 'The system shall be able to solve the steady incompressible Navier-Stokes equations with SUPG and PSPG stabilization and a second order velocity basis using an automatic differentiation, vector variable implementation in an RZ coordinate system while not integrating the pressure term by parts and applying a natural outflow boundary condition.'
  []
  [rz_cone_no_parts_steady_supg_pspg_second_order]
    type = 'Exodiff'
    input = 'rz_cone_no_parts_steady_stabilized_second_order.i'
    exodiff = 'rz_cone_no_parts_steady_stabilized_second_order_out.e'
    issues = '#14901'
    requirement = 'The system shall be able to solve the steady incompressible Navier-Stokes equations with SUPG and PSPG stabilization and a second order velocity basis using a hand-coded Jacobian, standard variable implementation in an RZ coordinate system while not integrating the pressure term by parts and applying a natural outflow boundary condition.'
  []
  [ad_rz_cone_by_parts_steady_supg_pspg_second_order]
    # TODO: update the gold file once second order derivatives are implemented in libMesh for TypeNTensors
    type = 'Exodiff'
    input = 'ad_rz_cone_by_parts_steady_stabilized_second_order.i'
    exodiff = 'ad_rz_cone_by_parts_steady_stabilized_second_order_out.e'
    issues = '#14901'
    requirement = 'The system shall be able to solve the steady incompressible Navier-Stokes equations with SUPG and PSPG stabilization and a second order velocity basis using an automatic differentiation, vector variable implementation in an RZ coordinate system while integrating the pressure term by parts and applying a natural outflow boundary condition.'
  []
  [rz_cone_by_parts_steady_supg_pspg_second_order]
    type = 'Exodiff'
    input = 'rz_cone_by_parts_steady_stabilized_second_order.i'
    exodiff = 'rz_cone_by_parts_steady_stabilized_second_order_out.e'
    issues = '#14901'
    requirement = 'The system shall be able to solve the steady incompressible Navier-Stokes equations with SUPG and PSPG stabilization and a second order velocity basis using a hand-coded Jacobian, standard variable implementation in an RZ coordinate system while integrating the pressure term by parts and applying a natural outflow boundary condition.'
  []
  [ad_jac]
    type = 'PetscJacobianTester'
    input = 'ad_rz_cone_stab_jac_test.i'
    ratio_tol = 1e-7
    difference_tol = 1e-5
    run_sim = True
    issues = '#14901'
    requirement = 'The system shall compute an accurate Jacobian using automatic differentiation when solving the incompressible Navier Stokes equations in an axisymmetric coordinate system with SUPG and PSPG stabilization'
  [../]
  [ad_rz_cone_by_parts_traction_steady_supg_pspg]
    type = 'Exodiff'
    input = 'ad_rz_cone_by_parts_traction_steady_stabilized.i'
    exodiff = 'ad_rz_cone_by_parts_traction_steady_stabilized_out.e'
    issues = '#14901'
    requirement = 'The system shall be able to solve the steady incompressible Navier-Stokes equations with SUPG and PSPG stabilization and a first order velocity basis using an automatic differentiation, vector variable implementation in an RZ coordinate system while integrating the pressure term by parts, using a traction form for the viscous term, and applying a natural outflow boundary condition.'
  []
  [rz_cone_by_parts_traction_steady_supg_pspg]
    type = 'Exodiff'
    input = 'rz_cone_by_parts_traction_steady_stabilized.i'
    exodiff = 'rz_cone_by_parts_traction_steady_stabilized_out.e'
    issues = '#14901'
    requirement = 'The system shall be able to solve the steady incompressible Navier-Stokes equations with SUPG and PSPG stabilization and a first order velocity basis using a hand-coded Jacobian, standard variable implementation in an RZ coordinate system while integrating the pressure term by parts, using a traction form for the viscous term, and applying a natural outflow boundary condition and reproduce the results of the AD, vector variable implementation.'
    custom_cmp = 'rz-cone-with-globals.cmp' # To ignore the vector variable components automatically generated by libMesh/ParaView
  []
  [ad_rz_cone_by_parts_traction_steady_supg_pspg_jac]
    type = 'PetscJacobianTester'
    difference_tol = 1e-6
    run_sim = True
    input = 'ad_rz_cone_by_parts_traction_steady_stabilized.i'
    issues = '#14901'
    requirement = 'The system shall be able to solve the steady incompressible Navier-Stokes equations with SUPG and PSPG stabilization and a first order velocity basis using an automatic differentiation, vector variable implementation in an RZ coordinate system while integrating the pressure term by parts, using a traction form for the viscous term, and applying a natural outflow boundary condition and obtain a perfect Jacobian.'
  []
  [ad_rz_displacements]
    requirement = 'The system shall be able to solve the steady incompressible Navier-Stokes equations in an axisymmetric coordinate system, using a Jacobian computed via automatic differentiation, on a displaced mesh, with the viscous term in'
    issues = '#21102'
    [traction]
      type = 'Exodiff'
      input = 'ad-rz-displacements.i'
      detail = 'traction form'
      exodiff = 'ad-rz-displacements-traction.e'
      cli_args = "Outputs/file_base=ad-rz-displacements-traction GlobalParams/viscous_form='traction'"
    []
    [laplace]
      type = 'Exodiff'
      input = 'ad-rz-displacements.i'
      detail = 'laplace form'
      exodiff = 'ad-rz-displacements-laplace.e'
      cli_args = "Outputs/file_base=ad-rz-displacements-laplace GlobalParams/viscous_form='laplace'"
    []
  []
[]

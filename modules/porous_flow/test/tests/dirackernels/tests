[Tests]
  [./squarepules]
    type = 'CSVDiff'
    input = 'squarepulse1.i'
    csvdiff = 'squarepulse1.csv'
    threading = '!pthreads'
    requirement = 'PorousFlowSquarePulsePointSource shall provide a constant mass point source/sink between two specified times'
    design = 'porous_flow/tests/dirackernels/dirackernels_tests.md porous_flow/sinks.md PorousFlowSquarePulsePointSource.md'
    issues = '#6990'
  [../]
  [./frompps]
    type = 'CSVDiff'
    input = 'frompps.i'
    csvdiff = 'frompps.csv'
    threading = '!pthreads'
    requirement = 'The system shall provide a mass point source/sink computed by a postprocessor'
    design = 'porous_flow/tests/dirackernels/dirackernels_tests.md porous_flow/sinks.md PorousFlowPointSourceFromPostprocessor.md'
    issues = '#15132'
  [../]
  [./hfrompps]
    type = 'CSVDiff'
    input = 'hfrompps.i'
    csvdiff = 'hfrompps.csv'
    threading = '!pthreads'
    requirement = 'The system shall provide an enthalphy point source computed by a postprocessor'
    design = 'porous_flow/sinks.md PorousFlowPointEnthalpySourceFromPostprocessor.md'
    issues = '#15742'
  [../]
  [./theis1]
    type = 'CSVDiff'
    input = 'theis1.i'
    csvdiff = 'theis1_pressure_0006.csv'
    threading = '!pthreads'
    requirement = 'PorousFlowSquarePulsePointSource shall provide a constant mass point sink between two specified times'
    design = 'porous_flow/tests/dirackernels/dirackernels_tests.md porous_flow/sinks.md PorousFlowSquarePulsePointSource.md'
    issues = '#6990'
  [../]
  [./theis_rz]
    type = 'CSVDiff'
    input = 'theis_rz.i'
    csvdiff = 'theis_rz_csv_pp_0006.csv'
    threading = '!pthreads'
    requirement = 'PorousFlow shall be able to accurately simulate drawdown in 2D groundwater systems, to agree with the Theis solution'
    design = 'porous_flow/tests/dirackernels/dirackernels_tests.md porous_flow/sinks.md PorousFlowSquarePulsePointSource.md'
    issues = '#6990 #13155'
  [../]
  [./theis2]
    type = 'CSVDiff'
    input = 'theis2.i'
    csvdiff = 'theis2_pressure_0006.csv'
    threading = '!pthreads'
    requirement = 'PorousFlowSquarePulsePointSource shall provide a constant mass point sink between two specified times'
    design = 'porous_flow/tests/dirackernels/dirackernels_tests.md porous_flow/sinks.md PorousFlowSquarePulsePointSource.md'
    issues = '#6990'
  [../]
  [./theis3]
    type = 'CSVDiff'
    input = 'theis3.i'
    csvdiff = 'theis3.csv'
    threading = '!pthreads'
    requirement = 'PorousFlowSquarePulsePointSource shall provide a constant mass point source of a specified fluid phase'
    design = 'porous_flow/tests/dirackernels/dirackernels_tests.md porous_flow/sinks.md PorousFlowSquarePulsePointSource.md'
    issues = '#7677'
  [../]

  [./bh_except01]
    type = 'RunException'
    input = 'bh_except01.i'
    expect_err = 'The Dictator proclaims that the maximum phase index in this simulation is 0 whereas you have used 1. Remember that indexing starts at 0. You must try harder.'
    threading = '!pthreads'
    requirement = 'PorousFlowPeacemanBorehole shall throw an error if the fluid phase is larger than the number of phases in the system'
    design = 'porous_flow/tests/dirackernels/dirackernels_tests.md porous_flow/sinks.md PorousFlowPeacemanBorehole.md'
    issues = '#7992 #8139'
  [../]
  [./bh_except02]
    type = 'RunException'
    input = 'bh_except02.i'
    expect_err = 'The Dictator proclaims that the maximum fluid component index in this simulation is 0 whereas you have used 1. Remember that indexing starts at 0. Please be assured that the Dictator has noted your error.'
    threading = '!pthreads'
    requirement = 'PorousFlowPeacemanBorehole shall throw an error if the fluid component is larger than the number of fluid components in the system'
    design = 'porous_flow/tests/dirackernels/dirackernels_tests.md porous_flow/sinks.md PorousFlowPeacemanBorehole.md'
    issues = '#7992 #8139'
  [../]
  [./bh_except03]
    type = 'RunException'
    input = 'bh_except03.i'
    expect_err = 'PorousFlowLineSink: You have specified function_of=porepressure, but you do not have a quadpoint porepressure material'
    threading = '!pthreads'
    requirement = 'PorousFlowPeacemanBorehole shall throw an error if flux is a function of porepressure but no porepressure material exists'
    design = 'porous_flow/tests/dirackernels/dirackernels_tests.md porous_flow/sinks.md PorousFlowPeacemanBorehole.md'
    issues = '#7992 #8139'
  [../]
  [./bh_except04]
    type = 'RunException'
    input = 'bh_except04.i'
    expect_err = 'PorousFlowLineSink: You have specified function_of=temperature, but you do not have a quadpoint temperature material'
    threading = '!pthreads'
    requirement = 'PorousFlowPeacemanBorehole shall throw an error if flux is a function of temperature but no temperature material exists'
    design = 'porous_flow/tests/dirackernels/dirackernels_tests.md porous_flow/sinks.md PorousFlowPeacemanBorehole.md'
    issues = '#7992 #8139'
  [../]
  [./bh_except05]
    type = 'RunException'
    input = 'bh_except05.i'
    expect_err = 'PorousFlowLineSink: You have specified a fluid component, but do not have a nodal mass-fraction material'
    threading = '!pthreads'
    requirement = 'PorousFlowPeacemanBorehole shall throw an error if flux is restricted to a specific fluid component but no mass fraction material exists'
    design = 'porous_flow/tests/dirackernels/dirackernels_tests.md porous_flow/sinks.md PorousFlowPeacemanBorehole.md'
    issues = '#7992 #8139'
  [../]
  [./bh_except06]
    type = 'RunException'
    input = 'bh_except06.i'
    expect_err = 'PorousFlowLineSink: You have set use_mobility=true, but do not have nodal density, relative permeability or viscosity material'
    threading = '!pthreads'
    requirement = 'PorousFlowPeacemanBorehole shall throw an error if flux is to be multiplied by mobility but no nodal fluid density material exists'
    design = 'porous_flow/tests/dirackernels/dirackernels_tests.md porous_flow/sinks.md PorousFlowPeacemanBorehole.md'
    issues = '#7992 #8139'
  [../]
  [./bh_except07]
    type = 'RunException'
    input = 'bh_except07.i'
    expect_err = 'PorousFlowLineSink: You have set use_mobility=true, but do not have nodal density, relative permeability or viscosity material'
    threading = '!pthreads'
    requirement = 'PorousFlowPeacemanBorehole shall throw an error if flux is to be multiplied by mobility but no nodal relative permeability material exists'
    design = 'porous_flow/tests/dirackernels/dirackernels_tests.md porous_flow/sinks.md PorousFlowPeacemanBorehole.md'
    issues = '#7992 #8139'
  [../]
  [./bh_except08]
    type = 'RunException'
    input = 'bh_except08.i'
    expect_err = 'PorousFlowLineSink: You have set use_mobility=true, but do not have nodal density, relative permeability or viscosity material'
    threading = '!pthreads'
    requirement = 'PorousFlowPeacemanBorehole shall throw an error if flux is to be multiplied by mobility but no nodal fluid density material exists'
    design = 'porous_flow/tests/dirackernels/dirackernels_tests.md porous_flow/sinks.md PorousFlowPeacemanBorehole.md'
    issues = '#7992 #8139'
  [../]
  [./bh_except09]
    type = 'RunException'
    input = 'bh_except09.i'
    expect_err = 'PorousFlowLineSink: You have set use_enthalpy=true, but do not have a nodal enthalpy material'
    threading = '!pthreads'
    requirement = 'PorousFlowPeacemanBorehole shall throw an error if flux is to be multiplied by enthalpy but no fluid enthalpy material exists'
    design = 'porous_flow/tests/dirackernels/dirackernels_tests.md porous_flow/sinks.md PorousFlowPeacemanBorehole.md'
    issues = '#7992 #8139'
  [../]
  [./bh_except10]
    type = 'RunException'
    input = 'bh_except10.i'
    expect_err = 'PorousFlowLineSink: You have set use_internal_energy=true, but do not have a nodal internal-energy material'
    threading = '!pthreads'
    requirement = 'PorousFlowPeacemanBorehole shall throw an error if flux is to be multiplied by internal energy but no fluid internal energy material exists'
    design = 'porous_flow/tests/dirackernels/dirackernels_tests.md porous_flow/sinks.md PorousFlowPeacemanBorehole.md'
    issues = '#7992 #8139'
  [../]
  [./bh_except11]
    type = 'RunException'
    input = 'bh_except11.i'
    expect_err = 'PorousFlowLineSink: You have set use_relative_permeability=true, but do not have a nodal relative permeability material'
    threading = '!pthreads'
    requirement = 'PorousFlowPeacemanBorehole shall throw an error if flux is to be multiplied by relative permeability but no nodal relative permeability material exists'
    design = 'porous_flow/tests/dirackernels/dirackernels_tests.md porous_flow/sinks.md PorousFlowPeacemanBorehole.md'
    issues = '#7992 #8139'
  [../]
  [./bh_except12]
    type = 'RunException'
    input = 'bh_except12.i'
    expect_err = 'PorousFlowLineGeometry: Error opening file does_not_exist'
    threading = '!pthreads'
    requirement = 'PorousFlowPeacemanBorehole shall throw an error if the given point file does not exist'
    design = 'porous_flow/tests/dirackernels/dirackernels_tests.md porous_flow/sinks.md PorousFlowPeacemanBorehole.md'
    issues = '#7992 #8139'
  [../]
  [./bh_except13]
    type = 'RunException'
    input = 'bh_except13.i'
    expect_err = 'PorousFlowLineGeometry: zero-segment length detected at \(x,y,z\) = 0.1 0.2 0.3'
    threading = '!pthreads'
    requirement = 'PorousFlowPeacemanBorehole shall throw an error if two points in the point file are coincident'
    design = 'porous_flow/tests/dirackernels/dirackernels_tests.md porous_flow/sinks.md PorousFlowPeacemanBorehole.md'
    issues = '#7992 #8139'
  [../]
  [./bh_except14]
    type = 'RunException'
    input = 'bh_except14.i'
    expect_err = 'The effective element size \(about 0.2-times-true-ele-size\) for an element containing a Peaceman-type borehole must be \(much\) larger than the borehole radius for the Peaceman formulation to be correct.  Your element has effective size 0.39598 and the borehole radius is 10'
    threading = '!pthreads'
    requirement = 'PorousFlowPeacemanBorehole shall throw an error if the element containing the dirac kernel is not larger than the specified borehole radius'
    design = 'porous_flow/tests/dirackernels/dirackernels_tests.md porous_flow/sinks.md PorousFlowPeacemanBorehole.md'
    issues = '#7992 #8139'
  [../]
  [./bh_except15]
    type = 'RunException'
    input = 'bh_except15.i'
    expect_err = 'PorousFlowPeacemanBorehole: You have specified function_of=porepressure, but you do not have a quadpoint permeability material'
    threading = '!pthreads'
    requirement = 'PorousFlowPeacemanBorehole shall throw an error if flux is a function of porepressure but no permeability material exists'
    design = 'porous_flow/tests/dirackernels/dirackernels_tests.md porous_flow/sinks.md PorousFlowPeacemanBorehole.md'
    issues = '#7992 #8139'
  [../]
  [./bh_except16]
    type = 'RunException'
    input = 'bh_except16.i'
    expect_err = 'PorousFlowPeacemanBorehole: You have specified function_of=temperature, but you do not have a quadpoint thermal_conductivity material'
    threading = '!pthreads'
    requirement = 'PorousFlowPeacemanBorehole shall throw an error if flux is a function of temperature but no thermal conductivity material exists'
    design = 'porous_flow/tests/dirackernels/dirackernels_tests.md porous_flow/sinks.md PorousFlowPeacemanBorehole.md'
    issues = '#7992 #8139'
  [../]
  [./bh_except17]
    type = 'RunException'
    input = 'bh02.i'
    cli_args = 'DiracKernels/bh/point_file=bh02_error.bh'
    expect_err = 'PorousFlowPeacemanBorehole: The last entry in the point_file needs to be at the bottom of the well_bore because this is the point where the function bottom_p_or_t is evaluated.'
    threading = '!pthreads'
    requirement = 'PorousFlowPeacemanBorehole shall throw an error if the last point in the point_file is not at the well bottom, ie has the lowest z coordinate value.'
    design = 'PorousFlowPeacemanBorehole.md'
    issues = '#24639'
  [../]

  [./pls01_00]
    type = 'CSVDiff'
    input = 'pls01.i'
    cli_args = 'DiracKernels/pls/point_file=pls01_00.bh Outputs/file_base=pls01_00'
    csvdiff = 'pls01_00.csv'
    threading = '!pthreads'
    requirement = 'PorousFlowPolyLineSink shall extract fluid at the specified rate'
    design = 'porous_flow/tests/dirackernels/dirackernels_tests.md porous_flow/sinks.md PorousFlowPolyLineSink.md'
    issues = '#7992 #8139'
  [../]
  [./pls01_line_base]
    type = 'CSVDiff'
    input = 'pls01.i'
    cli_args = "DiracKernels/pls/point_file='' DiracKernels/pls/line_base='10 0 0' DiracKernels/pls/line_length=.02 DiracKernels/pls/line_direction='1 0 0' Outputs/file_base=pls01_line_base"
    csvdiff = 'pls01_line_base.csv'
    threading = '!pthreads'
    requirement = 'PorousFlowPolyLineSink shall extract fluid at the specified rate when using the line_base parameter'
    design = 'porous_flow/tests/dirackernels/dirackernels_tests.md porous_flow/sinks.md PorousFlowPolyLineSink.md'
    issues = '#7992 #8139'
  [../]
  [./pls01_line_base_bounds]
    type = RunException
    input = 'pls01.i'
    cli_args = "DiracKernels/pls/point_file='' DiracKernels/pls/line_base='.1 0 0' DiracKernels/pls/line_length=42 DiracKernels/pls/line_direction='0 0 1'"
    expect_err = 'length causes end point.*to lie outside the mesh'
    threading = '!pthreads'
    requirement = 'PorousFlowPolyLineSink shall abort with an error if the line base, direction, and length cause the line to exit the mesh domain."'
    design = 'porous_flow/tests/dirackernels/dirackernels_tests.md porous_flow/sinks.md PorousFlowPolyLineSink.md'
    issues = '#7992 #8139'
  [../]
  [./pls01_01]
    type = 'CSVDiff'
    input = 'pls01.i'
    cli_args = 'DiracKernels/pls/point_file=pls01_01.bh Outputs/file_base=pls01_01'
    csvdiff = 'pls01_01.csv'
    threading = '!pthreads'
    requirement = 'PorousFlowPolyLineSink shall extract fluid at the specified rate'
    design = 'porous_flow/tests/dirackernels/dirackernels_tests.md porous_flow/sinks.md PorousFlowPolyLineSink.md'
    issues = '#7992 #8139'
  [../]
  [./pls01_20]
    type = 'CSVDiff'
    input = 'pls01.i'
    cli_args = 'DiracKernels/pls/point_file=pls01_20.bh Outputs/file_base=pls01_20'
    csvdiff = 'pls01_20.csv'
    threading = '!pthreads'
    requirement = 'PorousFlowPolyLineSink shall extract fluid at the specified rate'
    design = 'porous_flow/tests/dirackernels/dirackernels_tests.md porous_flow/sinks.md PorousFlowPolyLineSink.md'
    issues = '#7992 #8139'
  [../]
  [./pls01_21]
    type = 'CSVDiff'
    input = 'pls01.i'
    cli_args = 'DiracKernels/pls/point_file=pls01_21.bh Outputs/file_base=pls01_21'
    csvdiff = 'pls01_21.csv'
    threading = '!pthreads'
    requirement = 'PorousFlowPolyLineSink shall extract fluid at the specified rate'
    design = 'porous_flow/tests/dirackernels/dirackernels_tests.md porous_flow/sinks.md PorousFlowPolyLineSink.md'
    issues = '#7992 #8139'
  [../]
  [./pls02]
    type = 'CSVDiff'
    input = 'pls02.i'
    csvdiff = 'pls02.csv'
    threading = '!pthreads'
    requirement = 'PorousFlowPolyLineSink shall extract fluid at the specified rate'
    design = 'porous_flow/tests/dirackernels/dirackernels_tests.md porous_flow/sinks.md PorousFlowPolyLineSink.md'
    issues = '#7992 #8139'
  [../]
  [./pls02_autopoints]
    type = 'CSVDiff'
    input = 'pls02.i'
    csvdiff = 'pls02_dirac_pts_0004.csv'
    allow_test_objects = true
    mesh_mode=replicated
    cli_args = "VectorPostprocessors/dirac_pts/type=DiracPointsWriter"
               " DiracKernels/pls/point_file=''"
               " DiracKernels/pls/line_base='0.1 0.01 0.01 -0.249'"
               " DiracKernels/pls/line_direction='0 0 1'"
               " DiracKernels/pls/line_length=0.5"
               " Adaptivity/max_h_level=4"
               " Adaptivity/steps=3"
               " Adaptivity/marker=box"
               " Adaptivity/Markers/box/type=BoxMarker"
               " Adaptivity/Markers/box/bottom_left='-2 -2 -2'"
               " Adaptivity/Markers/box/top_right='2 2 2'"
               " Adaptivity/Markers/box/inside=refine"
               " Adaptivity/Markers/box/outside=do_nothing"
               " Executioner/end_time=4"
    threading = '!pthreads'
    requirement = 'PorousFlowPolyLineSink shall be able to dynamically create dirac points automatically in response to changing mesh geometry.'
    design = 'porous_flow/tests/dirackernels/dirackernels_tests.md porous_flow/sinks.md PorousFlowPolyLineSink.md'
    issues = '#15528 #15547'
  [../]
  [./pls03_00]
    type = 'CSVDiff'
    input = 'pls03.i'
    cli_args = 'ICs/pp/function="if((x<1)&(y<0.5),1E7,-1E7)" Outputs/file_base=pls03_00'
    csvdiff = 'pls03_00.csv'
    threading = '!pthreads'
    requirement = 'PorousFlowPolyLineSink shall extract fluid at the specified rate'
    design = 'porous_flow/tests/dirackernels/dirackernels_tests.md porous_flow/sinks.md PorousFlowPolyLineSink.md'
    issues = '#7992 #8139'
  [../]
  [./pls03_01]
    type = 'CSVDiff'
    input = 'pls03.i'
    cli_args = 'ICs/pp/function="if((x<1)&(y>0.5),1E7,-1E7)" Outputs/file_base=pls03_01'
    csvdiff = 'pls03_01.csv'
    threading = '!pthreads'
    requirement = 'PorousFlowPolyLineSink shall extract fluid at the specified rate'
    design = 'porous_flow/tests/dirackernels/dirackernels_tests.md porous_flow/sinks.md PorousFlowPolyLineSink.md'
    issues = '#7992 #8139'
  [../]
  [./pls03_20]
    type = 'CSVDiff'
    input = 'pls03.i'
    cli_args = 'ICs/pp/function="if((x>1)&(y<0.5),1E7,-1E7)" Outputs/file_base=pls03_20'
    csvdiff = 'pls03_20.csv'
    threading = '!pthreads'
    requirement = 'PorousFlowPolyLineSink shall extract fluid at the specified rate'
    design = 'porous_flow/tests/dirackernels/dirackernels_tests.md porous_flow/sinks.md PorousFlowPolyLineSink.md'
    issues = '#7992 #8139'
  [../]
  [./pls03_21]
    type = 'CSVDiff'
    input = 'pls03.i'
    cli_args = 'ICs/pp/function="if((x>1)&(y>0.5),1E7,-1E7)" Outputs/file_base=pls03_21'
    csvdiff = 'pls03_21.csv'
    threading = '!pthreads'
    requirement = 'PorousFlowPolyLineSink shall extract fluid at the specified rate'
    design = 'porous_flow/tests/dirackernels/dirackernels_tests.md porous_flow/sinks.md PorousFlowPolyLineSink.md'
    issues = '#7992 #8139'
  [../]
  [./pls03_action]
    type = 'CSVDiff'
    input = 'pls03_action.i'
    csvdiff = 'pls03_action.csv'
    threading = '!pthreads'
    requirement = 'PorousFlowPolyLineSink shall extract fluid at the specified rate'
    design = 'porous_flow/tests/dirackernels/dirackernels_tests.md porous_flow/sinks.md PorousFlowPolyLineSink.md'
    issues = '#7992 #8139'
  [../]
  [./pls02reporter]
    type = 'CSVDiff'
    input = 'pls02reporter.i'
    csvdiff = 'pls02reporter_out.csv'
    threading = '!pthreads'
    requirement = 'PorousFlowPolyLineSink shall extract fluid at the specified rate getting the coordinates from a reporter'
    design = 'porous_flow/tests/dirackernels/dirackernels_tests.md porous_flow/sinks.md PorousFlowPolyLineSink.md'
    issues = '#20018'
  [../]
  [./pls02reporter_wrongSize]
    type = RunException
    input = 'pls02reporter.i'
    cli_args = "Reporters/pls02file/real_vector_values='0.10; 0 0; 0 0; -0.25 0.25'"
    expect_err = 'weight size = 1;  x_coord size = 2;  y_coord size = 2;  z_coord size = 2'
    threading = '!pthreads'
    requirement = 'PorousFlowPolyLineSink shall abort with an error if the reporter containing the coordinates is not the same size as the reporter containing weights'
    design = 'PorousFlowPolyLineSink.md'
    issues = '#20506'
  [../]
  [./pls02reporter_empty]
    type = RunException
    input = 'pls02reporter.i'
    cli_args = "Reporters/pls02file/type=EmptyReporter"
    expect_err = 'PorousFlowLineGeometry: No points found in input.'
    allow_test_objects = true
    threading = '!pthreads'
    requirement = 'PorousFlowPolyLineSink shall abort with an error if the coordinates reporter is empty'
    design = 'PorousFlowPolyLineSink.md'
    issues = '#20506'
  [../]


  [./bh02]
    type = 'CSVDiff'
    input = 'bh02.i'
    csvdiff = 'bh02.csv'
    threading = '!pthreads'
    requirement = 'PorousFlowPeacemanBorehole shall extract fluid at the specified rate in a fully-saturated system'
    design = 'porous_flow/tests/dirackernels/dirackernels_tests.md porous_flow/sinks.md PorousFlowPeacemanBorehole.md'
    issues = '#7992 #8139'
  [../]
  [./bh03]
    type = 'CSVDiff'
    input = 'bh03.i'
    csvdiff = 'bh03.csv'
    threading = '!pthreads'
    requirement = 'PorousFlowPeacemanBorehole shall inject fluid at the specified rate in a fully-saturated system'
    design = 'porous_flow/tests/dirackernels/dirackernels_tests.md porous_flow/sinks.md PorousFlowPeacemanBorehole.md'
    issues = '#7992 #8139 #20452'
  [../]
  [./bh04]
    type = 'CSVDiff'
    input = 'bh04.i'
    csvdiff = 'bh04.csv'
    threading = '!pthreads'
    requirement = 'PorousFlowPeacemanBorehole shall extract fluid at the specified rate in a fully-saturated system'
    design = 'porous_flow/tests/dirackernels/dirackernels_tests.md porous_flow/sinks.md PorousFlowPeacemanBorehole.md'
    issues = '#7992 #8139'
  [../]
  [./bh05]
    type = 'CSVDiff'
    input = 'bh05.i'
    csvdiff = 'bh05.csv'
    rel_err = 5.7e-06 # diff is ~5.6e-6 on falcon
    threading = '!pthreads'
    requirement = 'PorousFlowPeacemanBorehole shall inject fluid at the specified rate in an unsaturated system'
    design = 'porous_flow/tests/dirackernels/dirackernels_tests.md porous_flow/sinks.md PorousFlowPeacemanBorehole.md'
    issues = '#7992 #8139'
  [../]
  [./bh07]
    type = 'CSVDiff'
    input = 'bh07.i'
    cli_args = 'Outputs/file_base=bh07_csv'
    csvdiff = 'bh07_csv_pp_0003.csv'
    threading = '!pthreads'
    requirement = 'PorousFlowPeacemanBorehole shall extract fluid at the specified rate in a cylindrical model'
    design = 'porous_flow/tests/dirackernels/dirackernels_tests.md porous_flow/sinks.md PorousFlowPeacemanBorehole.md'
    issues = '#7992 #8139'
  [../]
  [./bh07_exo]
    type = 'Exodiff'
    input = 'bh07.i'
    exodiff = 'bh07.e'
    threading = '!pthreads'
    requirement = 'PorousFlowPeacemanBorehole shall extract fluid at the specified rate in a cylindrical model'
    design = 'porous_flow/tests/dirackernels/dirackernels_tests.md porous_flow/sinks.md PorousFlowPeacemanBorehole.md'
    issues = '#7992 #8139'
  [../]
  [./bh02reporter]
    type = 'CSVDiff'
    input = 'bh02reporter.i'
    csvdiff = 'bh02reporter_out.csv'
    threading = '!pthreads'
    requirement = 'PorousFlowPeacemanBorehole shall extract fluid at the specified rate in a fully-saturated system using reporter for input'
    design = 'porous_flow/tests/dirackernels/dirackernels_tests.md porous_flow/sinks.md PorousFlowPeacemanBorehole.md'
    issues = '#20018'
  [../]
  [./injection_production]
    type = 'Exodiff'
    input = 'injection_production.i'
    exodiff = 'injection_production_out.e'
    threading = '!pthreads'
    requirement = 'Multiple PorousFlowPeacemanBorehole objects shall be able to inject and extract fluid in different locations'
    design = 'porous_flow/tests/dirackernels/dirackernels_tests.md porous_flow/sinks.md PorousFlowPeacemanBorehole.md'
    issues = '#7992 #8139'
  [../]
  [./strain_at_nearest_qp]
    type = RunApp
    input = strain_at_nearest_qp.i
    threading = '!pthreads'
    requirement = "If the strain at the nearest quadpoint is used when evaluating PorousFlowPorosity that is coupled to solid mechanics, all PorousFlow DiracKernels shall be usable"
    issues = "#12541"
    design = 'porous_flow/tests/dirackernels/dirackernels_tests.md porous_flow/sinks.md'
  [../]
  [./injection_with_plasticity]
    type = 'Exodiff'
    input = 'injection_with_plasticity.i'
    exodiff = 'injection_with_plasticity_out.e'
    threading = '!pthreads'
    abs_zero = 1E-5
    requirement = 'It shall be possible to use PorousFlow DiracKernels in simulations involving plastic deformation'
    design = 'porous_flow/sinks.md PorousFlowPeacemanBorehole.md'
    issues = '#12962'
  [../]
[]

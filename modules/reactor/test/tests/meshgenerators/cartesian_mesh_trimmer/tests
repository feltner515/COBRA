[Tests]
  design = 'meshgenerators/CartesianMeshTrimmer.md'
  issues = '#22828'
  [peripheral_trimming_full]
    type = 'Exodiff'
    input = 'assembly_trim.i'
    exodiff = 'peripheral_trimming_full.e'
    cli_args = 'Mesh/trim/trim_peripheral_region="1 1 1 1"
                Mesh/trim/peripheral_trimming_section_boundary="peripheral_section"
                Mesh/inactive="peripheral_ring pattern_mod pattern2"
                --mesh-only "peripheral_trimming_full.e"'
    requirement ='The system shall be able to trim all of the four peripheral regions off a square assembly mesh.'
    recover = false
  []
  [peripheral_trimming_partial]
    type = 'Exodiff'
    input = 'assembly_trim.i'
    exodiff = 'peripheral_trimming_partial.e'
    cli_args = 'Mesh/trim/trim_peripheral_region="1 0 0 1"
                Mesh/trim/peripheral_trimming_section_boundary="peripheral_section"
                Mesh/inactive="peripheral_ring pattern_mod pattern2"
                --mesh-only "peripheral_trimming_partial.e"'
    requirement ='The system shall be able to trim a fraction of the four peripheral regions off a square assembly mesh.'
    recover = false
    allow_warnings = true
  []
  [center_trimming]
    type = 'Exodiff'
    input = 'assembly_trim.i'
    exodiff = 'center_trimming.e'
    cli_args = 'Mesh/trim/center_trim_starting_index=4
                Mesh/trim/center_trim_ending_index=7
                Mesh/trim/center_trimming_section_boundary="center_section"
                Mesh/inactive="peripheral_ring pattern_mod pattern2"
                --mesh-only "center_trimming.e"'
    requirement ='The system shall be able to trim a fraction of a square assembly mesh through its center.'
    recover = false
  []
  [mod_center_trimming]
    type = 'Exodiff'
    input = 'assembly_trim.i'
    exodiff = 'mod_center_trimming.e'
    cli_args = 'Mesh/trim/input=pattern_mod
                Mesh/trim/center_trim_starting_index=4
                Mesh/trim/center_trim_ending_index=7
                Mesh/trim/center_trimming_section_boundary="center_section"
                Mesh/pattern_mod/num_layers=2
                Mesh/inactive="peripheral_ring pattern2"
                --mesh-only "mod_center_trimming.e"'
    requirement ='The system shall be able to trim a fraction of a square assembly mesh with its peripheral regions modified through its center.'
    recover = false
  []
  [double_trimming]
    type = 'Exodiff'
    input = 'assembly_trim.i'
    exodiff = 'double_trimming.e'
    cli_args = 'Mesh/trim/center_trim_starting_index=4
                Mesh/trim/center_trim_ending_index=7
                Mesh/trim/center_trimming_section_boundary="center_section"
                Mesh/trim/trim_peripheral_region="1 1 1 1"
                Mesh/trim/peripheral_trimming_section_boundary="peripheral_section"
                Mesh/inactive="peripheral_ring pattern_mod pattern2"
                --mesh-only "double_trimming.e"'
    requirement ='The system shall be able to perform both peripheral and center trimming simultaneously on a square assembly.'
    recover = false
  []
  [peripheral_ring_trimming]
    type = 'Exodiff'
    input = 'assembly_trim.i'
    exodiff = 'ring_trimming.e'
    cli_args = 'Mesh/trim/input=peripheral_ring
                Mesh/trim/center_trim_starting_index=6
                Mesh/trim/center_trim_ending_index=7
                Mesh/trim/center_trimming_section_boundary="center_section"
                Mesh/inactive="pattern2 pattern_mod"
                --mesh-only "ring_trimming.e"'
    requirement ='The system shall be able to perform center trimming on a center-trimmable cartesian mesh with peripheral ring(s) added.'
    recover = false
  []
  [patterned_pattern_trimming]
    type = 'Exodiff'
    input = 'assembly_trim.i'
    exodiff = 'patterned_pattern_trimming.e'
    cli_args = 'Mesh/trim/input=pattern2
                Mesh/trim/center_trim_starting_index=6
                Mesh/trim/center_trim_ending_index=7
                Mesh/trim/center_trimming_section_boundary="center_section"
                Mesh/inactive="peripheral_ring pattern_mod"
                --mesh-only "patterned_pattern_trimming.e"'
    requirement ='The system shall be able to perform center trimming on a cartesian core mesh generated by double cartesian patterning.'
    recover = false
  []
  [mod_patterned_pattern_trimming]
    type = 'Exodiff'
    input = 'assembly_trim.i'
    exodiff = 'mod_patterned_pattern_trimming.e'
    cli_args = 'Mesh/pattern2/inputs=pattern_mod
                Mesh/trim/input=pattern2
                Mesh/trim/center_trim_starting_index=6
                Mesh/trim/center_trim_ending_index=7
                Mesh/trim/center_trimming_section_boundary="center_section"
                Mesh/inactive="peripheral_ring"
                --mesh-only "mod_patterned_pattern_trimming.e"'
    requirement ='The system shall be able to perform center trimming on a cartesian core mesh generated by double cartesian patterning with the peripheral regions of assembly meshes modified.'
    recover = false
  []
  [patterned_pattern_trimming_tri]
    type = 'Exodiff'
    input = 'assembly_trim.i'
    exodiff = 'patterned_pattern_trimming_tri.e'
    cli_args = 'Mesh/trim/input=pattern2
                Mesh/trim/center_trim_starting_index=6
                Mesh/trim/center_trim_ending_index=7
                Mesh/trim/center_trimming_section_boundary="center_section"
                Mesh/inactive="peripheral_ring pattern_mod"
                Mesh/sq_1/ring_block_names="center center"
                Mesh/sq_1/ring_block_ids="15 15"
                Mesh/sq_1/quad_center_elements=true
                --mesh-only "patterned_pattern_trimming_tri.e"'
    requirement ='The system shall be able to perform center trimming on a core mesh generated by double cartesian patterning with pin centers consisting of triangular elements.'
    recover = false
    allow_warnings = true
  []
  [patterned_trimmed]
    type = 'Exodiff'
    input = 'patterned_trimmed.i'
    exodiff = 'patterned_trimmed_in.e'
    cli_args = '--mesh-only'
    requirement ='The system shall be able to stitch together cartesian assembly meshes after peripheral trimming.'
    recover = false
    allow_warnings = true
  []
  [err_no_external_bdry]
    type = RunException
    input = 'assembly_trim.i'
    cli_args = 'Mesh/trim/trim_peripheral_region="1 1 1 1"
                Mesh/trim/peripheral_trimming_section_boundary="peripheral_section"
                Mesh/trim/external_boundary="external"
                Mesh/inactive="peripheral_ring pattern_mod pattern2"'
    expect_err = 'the provided external boundary does not exist in the input mesh.'
    requirement = "The system shall throw an error if the input cartesian mesh does not contain the provided external boundary."
  []
  [err_incompatible]
    type = RunException
    input = 'err_trimmability.i'
    cli_args = 'Mesh/inactive="sq_1 peripheral_ring"'
    expect_err = "The input mesh's meta data is not compatible with the CartesianMeshTrimmer."
    requirement = "The system shall throw an error if the input mesh has not been marked compatible with cartesian mesh trimming."
  []
  [err_center_trimmable]
    type = RunException
    input = 'err_trimmability.i'
    cli_args = 'Mesh/trim/input=peripheral_ring
                Mesh/inactive="gmg"
                Mesh/trim/center_trim_starting_index=0
                Mesh/trim/center_trim_ending_index=4'
    expect_err = 'The input mesh cannot be trimmed through its center.'
    requirement = "The system shall throw an error if the input cartesian mesh cannot be center trimmed."
  []
  [err_unneeded_center_trim_bdry]
    type = RunException
    input = 'assembly_trim.i'
    cli_args = 'Mesh/trim/center_trimming_section_boundary="center_section"'
    expect_err = 'this input parameter is not used if center trimming is not performed.'
    requirement = "The system shall throw an error if the input cartesian mesh is not to be trimmed at the center but the center trimming boundary is provided anyway."
  []
  [err_over_center_trim]
    type = RunException
    input = 'assembly_trim.i'
    cli_args = 'Mesh/trim/center_trim_starting_index=0
                Mesh/trim/center_trim_ending_index=7'
    expect_err = 'the remaining mesh after center trimming defined by this parameter and center_trim_ending_index must be equal or smaller than half of the input mesh.'
    requirement = "The system shall throw an error if the center trimming would yield a mesh that is over half of the input cartesian mesh, because more than half of the angular sectors are requested."
  []
  [err_incomplete_center_trim]
    type = RunException
    input = 'assembly_trim.i'
    cli_args = 'Mesh/trim/center_trim_starting_index=0'
    expect_err = 'this parameter must be provided along with center_trim_ending_index.'
    requirement = "The system shall throw an error if the center trimming index parameters are not given in a pair for cartesian mesh trimming."
  []
  [err_peripheral_trimmable]
    type = RunException
    input = 'err_trimmability.i'
    cli_args = 'Mesh/trim/input=peripheral_ring
                Mesh/inactive="gmg"
                Mesh/trim/trim_peripheral_region="1 1 1 1"'
    expect_err = 'The input mesh does not have a trimmable peripheral region.'
    requirement = "The system shall throw an error if the input cartesian mesh cannot be trimmed at the periphery."
  []
  [err_unneeded_peripheral_trim_bdry]
    type = RunException
    input = 'assembly_trim.i'
    cli_args = 'Mesh/trim/peripheral_trimming_section_boundary="peripheral_section"'
    expect_err = 'this input parameter is not used if peripheral trimming is not performed.'
    requirement = "The system shall throw an error if the input cartesian mesh is not to be trimmed at the periphery but the peripheral trimming boundary is provided."
  []
  [err_preexistent_tri_block_name]
    type = RunException
    input = 'assembly_trim.i'
    cli_args = 'Mesh/trim/input=pattern2
                Mesh/trim/center_trim_starting_index=5
                Mesh/trim/center_trim_ending_index=6
                Mesh/trim/tri_elem_subdomain_name_suffix=tri
                Mesh/sq_1/ring_block_names="center center_tri"
                Mesh/sq_1/ring_block_ids="15 10"
                Mesh/sq_1/quad_center_elements=true
                Mesh/inactive="pattern_mod peripheral_ring"
                --mesh-only err.e'
    expect_err = 'The new subdomain name already exists in the mesh.'
    requirement = "The system shall throw an error if the block name assigned to the newly generated TRI elements already exists in the input cartesian mesh."
  []
  [warning_tri_block_gen]
    type = 'RunException'
    input = 'assembly_trim.i'
    cli_args = 'Mesh/trim/input=pattern2
                Mesh/trim/center_trim_starting_index=6
                Mesh/trim/center_trim_ending_index=7
                Mesh/trim/center_trimming_section_boundary="center_section"
                Mesh/inactive="peripheral_ring pattern_mod"
                Mesh/sq_1/ring_block_names="center center"
                Mesh/sq_1/ring_block_ids="15 15"
                Mesh/sq_1/quad_center_elements=true
                --mesh-only "patterned_pattern_trimming_tri.e"'
    expect_err = 'Degenerate QUAD elements have been converted into TRI elements with a new subdomain name'
    requirement ='The system shall throw a warning if new blocks are created in the cartesian mesh to avert degenerate elements.'
    allow_warnings = false
  []
[]
